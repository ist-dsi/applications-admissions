<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.fenixedu</groupId>
        <artifactId>fenix-framework-project</artifactId>
        <version>2.5.2</version>
        <relativePath />
    </parent>

    <groupId>pt.ist</groupId>
    <artifactId>applications-admissions</artifactId>
    <version>4.2.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Applications and Admission Process</name>

    <scm>
        <connection>scm:git:git@github.com:ist-dsi/applications-admissions.git</connection>
        <developerConnection>scm:git:git@github.com:ist-dsi/applications-admissions.git</developerConnection>
        <url>http://fenixedu.org</url>
        <tag>v4.0.1</tag>
    </scm>

    <issueManagement>
        <system>JIRA</system>
        <url>https://jira.fenixedu.org/browse/DAA</url>
    </issueManagement>

    <properties>
        <version.org.fenixedu.bennu>6.1.0</version.org.fenixedu.bennu>
        <version.org.fenixedu.bennu.renderers>6.0.1</version.org.fenixedu.bennu.renderers>
        <version.javax.servlet.jstl>1.2</version.javax.servlet.jstl>
        <version.org.webjars.jquery-ui>1.11.1</version.org.webjars.jquery-ui>
        <version.pt.ist.drive-sdk>2.1.0</version.pt.ist.drive-sdk>
        <version.org.fenixedu.messaging>4.0.0</version.org.fenixedu.messaging>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.fenixedu</groupId>
            <artifactId>bennu-core</artifactId>
            <version>${version.org.fenixedu.bennu}</version>
        </dependency>
        <dependency>
            <groupId>org.fenixedu</groupId>
            <artifactId>bennu-portal</artifactId>
            <version>${version.org.fenixedu.bennu}</version>
        </dependency>
        <dependency>
            <groupId>org.fenixedu</groupId>
            <artifactId>bennu-scheduler</artifactId>
            <version>${version.org.fenixedu.bennu}</version>
        </dependency>
        <dependency>
            <groupId>org.fenixedu</groupId>
            <artifactId>bennu-spring</artifactId>
            <version>${version.org.fenixedu.bennu}</version>
        </dependency>
        <dependency>
            <groupId>org.fenixedu</groupId>
            <artifactId>bennu-renderers</artifactId>
            <version>${version.org.fenixedu.bennu.renderers}</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>${version.javax.servlet.jstl}</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>jquery-ui</artifactId>
            <version>${version.org.webjars.jquery-ui}</version>
        </dependency>
        <dependency>
            <groupId>pt.ist</groupId>
            <artifactId>drive-sdk</artifactId>
            <version>${version.pt.ist.drive-sdk}</version>
        </dependency>
        <dependency>
            <groupId>org.fenixedu</groupId>
            <artifactId>messaging-core</artifactId>
            <version>${version.org.fenixedu.messaging}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.3.2</version>
                <configuration>
                    <skip>${exec.skip}</skip>
                </configuration>
                <executions>
                    <!-- Required: The following will ensure `npm install` is called
                         before anything else during the 'Default Lifecycle' -->
                    <execution>
                        <id>npm install (initialize)</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <workingDirectory>src/main/frontend</workingDirectory>
                            <executable>npm</executable>
                            <arguments>
                                <argument>install</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <!-- Required: The following will ensure `npm run clean` is called
                         before anything else during the 'Clean Lifecycle' -->
                    <execution>
                        <id>npm install (clean)</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-clean</phase>
                        <configuration>
                            <workingDirectory>src/main/frontend</workingDirectory>
                            <executable>npm</executable>
                            <arguments>
                                <argument>run</argument>
                                <argument>clean</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <!-- Required: This following builds the frontend -->
                    <execution>
                        <id>npm run build (compile)</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <workingDirectory>src/main/frontend</workingDirectory>
                            <executable>npm</executable>
                            <arguments>
                                <argument>run</argument>
                                <argument>package</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>staging</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.3.2</version>
                        <executions>
                            <!-- Required: This following builds the frontend -->
                            <execution>
                                <id>npm run build (compile)</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <phase>generate-sources</phase>
                                <configuration>
                                    <workingDirectory>src/main/frontend</workingDirectory>
                                    <executable>npm</executable>
                                    <arguments>
                                        <argument>run</argument>
                                        <argument>staging</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <repositories>
		<repository>
			<id>fenixedu-maven-repository</id>
			<url>https://repo.fenixedu.org/fenixedu-maven-repository</url>
		</repository>
    </repositories>

</project>
